openapi: 3.0.0
info:
  title: Student Management API
  description: API for managing students, rooms, and teachers.
  version: 1.0.0
paths:
  /api/students:
    get:
      summary: Get all students
      responses:
        '200':
          description: A list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    first_semester_grade:
                      type: number
                      format: float
                    second_semester_grade:
                      type: number
                      format: float
                    teacher_id:
                      type: integer
                    room_id:
                      type: integer
    post:
      summary: Create a new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                first_semester_grade:
                  type: number
                  format: float
                second_semester_grade:
                  type: number
                  format: float
                teacher_id:
                  type: integer
                room_id:
                  type: integer
      responses:
        '201':
          description: The created student
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  first_semester_grade:
                    type: number
                    format: float
                  second_semester_grade:
                    type: number
                    format: float
                  teacher_id:
                    type: integer
                  room_id:
                    type: integer

  /api/students/{id}:
    get:
      summary: Get a student by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A student object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  first_semester_grade:
                    type: number
                    format: float
                  second_semester_grade:
                    type: number
                    format: float
                  teacher_id:
                    type: integer
                  room_id:
                    type: integer
        '404':
          description: Student not found
    put:
      summary: Update a student by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                first_semester_grade:
                  type: number
                  format: float
                second_semester_grade:
                  type: number
                  format: float
                teacher_id:
                  type: integer
                room_id:
                  type: integer
      responses:
        '200':
          description: The updated student
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  first_semester_grade:
                    type: number
                    format: float
                  second_semester_grade:
                    type: number
                    format: float
                  teacher_id:
                    type: integer
                  room_id:
                    type: integer
        '404':
          description: Student not found
    delete:
      summary: Delete a student by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Student deleted
        '404':
          description: Student not found

  /api/teachers:
    get:
      summary: Get all teachers
      responses:
        '200':
          description: A list of teachers
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
    post:
      summary: Create a new teacher
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: The created teacher
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string

  /api/teachers/{id}:
    get:
      summary: Get a teacher by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A teacher object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: Teacher not found
    put:
      summary: Update a teacher by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: The updated teacher
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: Teacher not found
    delete:
      summary: Delete a teacher by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Teacher deleted
        '404':
          description: Teacher not found

  /api/rooms:
    get:
      summary: Get all rooms
      responses:
        '200':
          description: A list of rooms
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    number:
                      type: string
    post:
      summary: Create a new room
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
      responses:
        '201':
          description: The created room
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  number:
                    type: string

  /api/rooms/{id}:
    get:
      summary: Get a room by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A room object
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  number:
                    type: string
        '404':
          description: Room not found
    put:
      summary: Update a room by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                number:
                  type: string
      responses:
        '200':
          description: The updated room
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  number:
                    type: string
        '404':
          description: Room not found
    delete:
      summary: Delete a room by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Room deleted
        '404':
          description: Room not found
